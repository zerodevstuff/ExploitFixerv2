package dev._2lstudios.exploitfixer.listener;

import org.bukkit.block.Block;
import org.bukkit.block.BlockFace;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockPlaceEvent;

import dev._2lstudios.exploitfixer.managers.ModuleManager;
import dev._2lstudios.exploitfixer.modules.NotificationsModule;
import dev._2lstudios.exploitfixer.modules.PatcherModule;

public class BlockPlaceListener implements Listener {
    private PatcherModule eventsModule;
    private NotificationsModule notificationsModule;

    BlockPlaceListener(ModuleManager moduleManager) {
        this.eventsModule = moduleManager.getPatcherModule();
        this.notificationsModule = moduleManager.getNotificationsModule();
    }

    @EventHandler(priority = EventPriority.LOWEST, ignoreCancelled = true)
    public void onBlockPlace(BlockPlaceEvent event) {
        // Check if enabled
        if (eventsModule.isRedstoneTrapdoorCrash()) {
            // Get the block
            Block block = event.getBlock();

            // Check if block is null
            if (block == null) return;

            // Get the block type
            String blockType = block.getType().name().replace("LEGACY_", "");

            // Check if the type is redstone wire
            if (blockType.equals("REDSTONE") || blockType.equals("REDSTONE_WIRE")) {
                // Get block below
                Block blockBelow = block.getRelative(BlockFace.DOWN);

                // Check if block below is trapdoor
                if (blockBelow.getType().name().contains("TRAPDOOR")) {
                    event.setCancelled(true);
                    notificationsModule.debug("[Patcher] Stopped redstone trapdoor crash exploit by " + event.getPlayer().getName() + "!");
                }
            }
        }
    }
}
