package dev._2lstudios.exploitfixer.modules;

import java.util.Collection;
import java.util.regex.Pattern;

import dev._2lstudios.exploitfixer.configuration.IConfiguration;
import dev._2lstudios.exploitfixer.exploit.Violations;
import dev._2lstudios.exploitfixer.modules.interfaces.ViolationModule;

public class CommandsModule extends ViolationModule {
	private static Pattern SYNTAX_PATTERN = Pattern.compile("[a-z0-9-]{1,}:");

	private Collection<String> commands;
	private String bypassPermission;
	private double vls;

	public void reload(IConfiguration configYml) {
		setName("Commands");
		setEnabled(configYml.getBoolean("commands.enabled", true));
		setCancelVls(configYml.getDouble("commands.cancel_vls", 1D));
		setReduceVls(configYml.getDouble("commands.reduce_vls", 1D));
		setViolations(new Violations(configYml.getSection("commands.violations")));
		this.vls = configYml.getDouble("commands.vls", 1D);
		this.commands = configYml.getStringList("commands.commands");
		this.bypassPermission = configYml.getString("commands.bypass-permission");
	}

	public boolean isCommand(String rawMessage) {
		if (rawMessage != null) {
			String message = SYNTAX_PATTERN.matcher(rawMessage).replaceAll("").toLowerCase();

			for (String command : commands) {
				if (message.startsWith(command)) {
					return true;
				}
			}
		}

		return false;
	}

	public String getBypassPermission() {
		return bypassPermission;
	}

	public double getVls() {
		return vls;
	}
}
