package dev._2lstudios.exploitfixer.modules;

import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;

import dev._2lstudios.exploitfixer.configuration.IConfiguration;
import dev._2lstudios.exploitfixer.exploit.Violations;
import dev._2lstudios.exploitfixer.modules.interfaces.ViolationModule;

public class PacketsModule extends ViolationModule {
	private Map<String, Double> rateMultipliers = new HashMap<>();
	private Collection<String> blacklist = new HashSet<>();
	private double dataVls, bookVls, tagVls, blockDigVls, blockPlaceVls, setCreativeSlot, windowClick, byteMultiplier;
	private int dataMaxSizeBook, dataMaxSizeSign, dataMaxSize, dataMaxFlags, dataMaxFireworkFlags;
	private String bypassPermission;

	public void reload(IConfiguration configYml) {
		setName("Packets");
		String name = getName().toLowerCase();
		IConfiguration rateMultipliersSection = configYml.getSection(name + ".rate_multipliers");

		setEnabled(configYml.getBoolean(name + ".enabled"));
		setCancelVls(configYml.getDouble(name + ".cancel_vls"));
		setReduceVls(configYml.getDouble(name + ".reduce_vls"));
		setViolations(new Violations(configYml.getSection(name + ".violations")));
		this.dataVls = configYml.getDouble(name + ".data.vls");
		this.bookVls = configYml.getDouble(name + ".book");
		this.tagVls = configYml.getDouble(name + ".tag");
		this.dataMaxSize = configYml.getInt(name + ".data.max_size");
		this.dataMaxSizeBook = configYml.getInt(name + ".data.max_size_book");
		this.dataMaxSizeSign = configYml.getInt(name + ".data.max_size_sign");
		this.dataMaxFlags = configYml.getInt(name + ".data.max_flags");
		this.dataMaxFireworkFlags = configYml.getInt(name + ".data.max_firework_flags");
		this.byteMultiplier = configYml.getDouble(name + ".byte_multiplier");
		this.windowClick = configYml.getDouble(name + ".window_click");
		this.blockPlaceVls = configYml.getDouble(name + ".block_place");
		this.blockDigVls = configYml.getDouble(name + ".block_dig");
		this.setCreativeSlot = configYml.getDouble(name + ".set_creative_slot");
		this.bypassPermission = configYml.getString(name + ".bypass-permission");
		this.blacklist = new HashSet<>(configYml.getStringList(name + ".blacklist"));

		for (String key : rateMultipliersSection.getKeys()) {
			rateMultipliers.put(key, rateMultipliersSection.getDouble(key));
		}
	}

	public double getMultiplier(String packetName) {
		return rateMultipliers.getOrDefault(packetName, rateMultipliers.getOrDefault("PacketPlayInOther", 1D));
	}

	public double getWindowClick() {
		return windowClick;
	}

	public double getSetCreativeSlot() {
		return setCreativeSlot;
	}

	public double getBlockDigVls() {
		return blockDigVls;
	}

	public double getBlockPlaceVls() {
		return blockPlaceVls;
	}

	public double getDataVls() {
		return dataVls;
	}

	public double getBookVls() {
		return bookVls;
	}

	public double getTagVls() {
		return tagVls;
	}

	public int getDataMaxSize() {
		return dataMaxSize;
	}

	public int getDataMaxSizeBook() {
		return dataMaxSizeBook;
	}

	public int getDataMaxSizeSign() {
		return dataMaxSizeSign;
	}

	public double getDataVlMultiplier() {
		return byteMultiplier;
	}

    public boolean isBlacklisted(String packetName) {
        return blacklist.contains(packetName);
    }

    public int getDataMaxFireworkFlags() {
        return dataMaxFireworkFlags;
    }

	public int getDataMaxFlags() {
		return dataMaxFlags;
	}

    public String getBypassPermission() {
        return bypassPermission;
    }
}
