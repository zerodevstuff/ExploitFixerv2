package dev._2lstudios.exploitfixer.utils;

import java.lang.reflect.Field;
import java.lang.reflect.Method;

import org.bukkit.entity.Player;
import org.bukkit.entity.Player.Spigot;

public class ReflectionUtil {
	private static Method getLocalePlayerMethod = null;
	private static Method getLocaleSpigotMethod = null;
	private static Method getHandleMethod = null;
	private static Field pingField = null;

	public static Method getLocalePlayerMethod(Player player) throws NoSuchMethodException, SecurityException {
		return getLocalePlayerMethod == null ? getLocalePlayerMethod = player.getClass().getMethod("getLocale")
				: getLocalePlayerMethod;
	}

	public static Method getLocaleSpigotMethod() throws NoSuchMethodException, SecurityException {
		return getLocaleSpigotMethod == null ? getLocaleSpigotMethod = Spigot.class.getMethod("getLocale")
				: getLocaleSpigotMethod;
	}

	public static Method getHandleMethod(Player player) throws NoSuchMethodException, SecurityException {
		return getHandleMethod == null ? getHandleMethod = player.getClass().getMethod("getHandle") : getHandleMethod;
	}

	public static Field getPingField(Object playerHandle) throws NoSuchFieldException, SecurityException {
		return pingField == null ? pingField = playerHandle.getClass().getField("ping") : pingField;
	}

	public static Object getHandle(Player player) throws Throwable {
		return getHandleMethod(player).invoke(player);
	}

	public static int getPing(Object playerHandle) throws Throwable {
		return (int) getPingField(playerHandle).get(playerHandle);
	}

	public static int getPing(Player player) throws Throwable {
		return getPing(getHandle(player));
	}

	public static String getLocale(Player player) {
		try {
			Method getLocalePlayerMethod = getLocalePlayerMethod(player);

			if (getLocalePlayerMethod != null) {
				return (String) getLocalePlayerMethod.invoke(player);
			}
		} catch (Exception ex) {
			/* Couldn't get locale */
		}
		try {
			Method getLocaleSpigotMethod = getLocaleSpigotMethod();

			if (getLocaleSpigotMethod != null) {
				return (String) getLocaleSpigotMethod.invoke(player.spigot());
			}
		} catch (Exception ex) {
			/* Couldn't get locale */
		}

		return null;
	}
}